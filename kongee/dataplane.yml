namespace: kong
replicaCount: 1
image:
  repository: docker.io/kong/kong-gateway
  tag: "2.5"
deployment:
  kong:
    enabled: true
    daemonset: false
env:
  role: data_plane
  database: "off"
  plugins: "bundled,openid-connect"
  log_level: debug
  prefix: /kong_prefix/
  nginx_worker_processes: "2"
  lua_package_path: /opt/?.lua;;

  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  lua_ssl_trusted_certificate: /etc/ssl/certs/ca-certificates.crt 

  cluster_control_plane: controlplane-kong-cluster.kong.svc.cluster.local:8005
  cluster_telemetry_endpoint: controlplane-kong-clustertelemetry.kong.svc.cluster.local:8006

  proxy_stream_access_log: /dev/stdout
  proxy_stream_error_log: /dev/stdout
  status_error_log: /dev/stdout
  proxy_access_log: /dev/stdout
  proxy_error_log: /dev/stdout

enterprise:
  enabled: true
  license_secret: kong-enterprise-license

secretVolumes: 
  - kong-cluster-cert
  - kong-tls

################################
## MetalLB LoadBalancer
proxy:
  enabled: true
  type: LoadBalancer   
  annotations:
    prometheus.io/port: "9542"
    prometheus.io/scrape: "true"
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    service.beta.kubernetes.io/aws-load-balancer-name: "proxy"
    service.beta.kubernetes.io/aws-load-balancer-subnets: "subnet-0a4c44c677c2ea74c,subnet-07579767f7d37f425"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
   #service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    external-dns.alpha.kubernetes.io/hostname: proxy.kong.hbfs.io
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
  http:
    enabled: false
    servicePort: 80
    containerPort: 8080
  tls:
    enabled: true
    servicePort: 443
    containerPort: 8443
  ingress:
    enabled: false
  labels:
    enable-metrics: true

admin:
  enabled: false
portal:
  enabled: false
cluster:
  enabled: false
manager:
  enabled: false
portalapi:
  enabled: false
migrations:
  preUpgrade: false
  postUpgrade: false
ingressController:
  enabled: false
  installCRDs: false
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - dataplane
        topologyKey: kubernetes.io/hostname
      weight: 100
